name: CI
on: [ push, pull_request ]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python: [ "3.10", "3.11" ]
        torch: [ "2.0.1", "2.1.1" ]
        include:
          - torch: "2.0.1"
            torchvision: "0.15.2"
          - torch: "2.1.1"
            torchvision: "0.16.1"
    env:
      # point datasets to ~/.torch so it's cached by CI
      DETECTRON2_DATASETS: ~/.torch/datasets
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.pythonLocation }}/lib/python${{ matrix.python }}/site-packages
            ~/.torch
          key: ${{ runner.os }}-torch${{ matrix.torch }}-${{ hashFiles('setup.py') }}-20231129
      - name: Install dependencies macOS
        if: matrix.os == 'macos-latest'
        run: |
          python -m pip install -U pip
          python -m pip install ninja opencv-python-headless onnx pytest-xdist
          python -m pip install torch==${{matrix.torch}} torchvision==${{matrix.torchvision}} -f https://download.pytorch.org/whl/torch_stable.html
          # install from github to get latest; install iopath first since fvcore depends on it
          python -m pip install -U 'git+https://github.com/facebookresearch/iopath'
          python -m pip install -U 'git+https://github.com/facebookresearch/fvcore'
      - name: Install dependencies ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          python -m pip install -U pip
          python -m pip install ninja opencv-python-headless onnx pytest-xdist
          python -m pip install torch==${{matrix.torch}}+cpu torchvision==${{matrix.torchvision}}+cpu --index-url https://download.pytorch.org/whl/cpu
          # install from github to get latest; install iopath first since fvcore depends on it
          python -m pip install -U 'git+https://github.com/facebookresearch/iopath'
          python -m pip install -U 'git+https://github.com/facebookresearch/fvcore'
      - name: Build and install macos
        if: matrix.os == 'macOS'
        run: |
          CC=clang CXX=clang++ python -m pip install -e .[all]
          python -m detectron2.utils.collect_env
      - name: Create wheel
        run: |
          python -m pip install wheel
          python setup.py bdist_wheel
      - name: Upload wheel
        uses: actions/upload-artifact@v3
        with:
          name: detectron2-${{ matrix.python }}-pytorch${{ matrix.torch }}-${{matrix.os}}-wheel
          path: dist/*.whl
      - name: Build and install linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          python -m pip install -e .[all]
          python -m detectron2.utils.collect_env
      - name: Upload wheel
        uses: actions/upload-artifact@v3
        with:
          name: detectron2-${{ matrix.python }}-pytorch${{ matrix.torch }}-${{matrix.os}}-wheel
          path: dist/*.whl

      # New steps for release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Example: use the combination of run number and current timestamp for unique tag
          tag_name: release-${{ github.run_number }}-${{ github.run_attempt }}-${{ github.event_name }}-${{ github.ref_name }}-${{ github.sha }}
          release_name: Release ${{ github.run_number }}-${{ github.run_attempt }}-${{ github.event_name }}-${{ github.ref_name }}-${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload wheel to release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/*.whl
          asset_name: detectron2-${{ matrix.python }}-pytorch${{ matrix.torch }}-${{matrix.os}}-wheel.whl
          asset_content_type: application/octet-stream
